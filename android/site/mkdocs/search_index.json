{
    "docs": [
        {
            "location": "/", 
            "text": "Locarta Android SDK\n\n\n\n\n\n\n\n\nLatest Version\n\n\nSize\n\n\nMinimal Android API verison\n\n\nRelease Date\n\n\n\n\n\n\n\n\n\n\n143.be90ae4\n\n\n400 KB\n\n\n9 (2.3  Gingerbeard)\n\n\n03/08/2016\n\n\n\n\n\n\n\n\nSetup\n\n\n\n\nDeclare dependencies\n\n\nTo add the Locarta Sdk dependency open \nbuild.gradle\n file of your project and update the repositories and dependencies blocks as follows:\n\n\n     repositories {\n     // ... other project repositories\n     maven { url \nhttps://repo.pointwise.co/nexus/content/repositories/pointwise\n }\n     // Repository will be provided separately \n     }\n     // ...\n     dependencies {\n        // ... other project dependencies\n        compile (\nco.locarta.sdk:\nLocartaSdkVersion\n:pubProd@aar\n) {\n            transitive = true;\n        }\n     }\n\n\n\n\nwhere \"LocartaSdkVersion\" is actual Locarta SDK version\nSync build.gradle, rebuild your project and import \nco.locarta.sdk.LocartaSDK\n into your app.\n\n\nSet Publisher Key\n\n\nAdd \n tag to AndroidManifest.xml of your project\n\n\n    \napplication\n\n        \n!-- other content --\n\n        \nmeta-data android:name=\nco.locarta.sdk.pid\n android:value=\nYOUR PUBLISHER KEY\n/\n        \n    \n/application\n\n\n\n\n\nwhere PublisherKey is your Publisher Key.\n\n\nInitialise SDK\n\n\nYou need to initialise Locarta SDK only once on the startup\n\n\n    // Add this line to the header of your file\n    import co.locarta.sdk.LocartaSdk;\n    public class SdkDemoApplication extends Application {\n        @Override\n        public void onCreate() {\n            super.onCreate();\n            // Initialise SDK on App creation\n            LocartaSdk.initialize(getApplicationContext());\n        }\n    }\n\n\n\n\nUser opt-in\n\n\nUser has to opt-in into marketing research program for the SDK to start working.\n\n\nThis can be done either via embed dialog:\n\n\n    // Put this code somewhere in the main activities\n    LocartaSdk.showAgreementDialog(this);\n\n\n\n\nOr it can be done via API call if a host application has own accept dialog or compliant terms and conditions:\n\n\n    LocartaSDK.setTermsAccepted(true);\n\n\n\n\nIf you want to check the status of accepted terms, call:\n\n\n    // The call returns true or false if user accepted terms or not\n    LocartaSDK.getTermsAccepted();        \n\n\n\n\nIf you want to stop SDK for whatever reason:\n\n\n   LocartaSdk.stop(context);\n\n\n\n\nIntegration information\n\n\n\n\nBy default the host app \nshould not\n be setting any additional permissions in it's manifest.\n\n\nThe set of minimal permissions embedded in the Locarta SDK:\n\n\n\n\n\n\n\n\nPermission Name\n\n\nPlain English Name in App\n\n\nPlain German Name in App\n\n\n\n\n\n\n\n\n\n\nandroid.permission.INTERNET\n\n\nFull Network Access\n\n\nZugriff auf alle Netzwerke\n\n\n\n\n\n\nandroid.permission.ACCESS_COARSE_LOCATION\n\n\nApproximate Location\n\n\nUngef\u00e4hrer Standort\n\n\n\n\n\n\nandroid.permission.ACCESS_FINE_LOCATION\n\n\nPrecise Location\n\n\nGenauer Standort\n\n\n\n\n\n\nandroid.permission.ACCESS_NETWORK_STATE\n\n\nView Network Connections\n\n\nNetzwerkverbindungen abrufen\n\n\n\n\n\n\nandroid.permission.ACCESS_WIFI_STATE\n\n\nView Wifi Connections\n\n\nWLAN-Verbindungen abrufen\n\n\n\n\n\n\n\n\nProguard\n\n\nWe already configured proguard rules for the Locarta SDK. No addtional steps has to be done in the host application\n\n\nPerformance impact\n\n\nWe expect a battery impact of roughly 2% (adjustable).\n\n\nNormally we use about 1MB/week of mobile data, but this also depends on how often you connect to wifi.\n\n\n3rd party dependencies\n\n\nSince we ask you to integrate Locarta SDK as transitive @aar dependeny, we'd like to provide a list of 3rd party dependencies we use.\n\n\n\n\n\n\n\n\nDependency\n\n\nVersion\n\n\n\n\n\n\n\n\n\n\ncom.google.android.gms:play-services-location\n\n\n9.4.0\n\n\n\n\n\n\ncom.google.android.gms:play-services-gcm\n\n\n9.4.0\n\n\n\n\n\n\ncom.android.support:appcompat-v7\n\n\n24.1.1\n\n\n\n\n\n\ncom.google.code.gson:gson\n\n\n2.7\n\n\n\n\n\n\ncom.squareup.retrofit2:retrofit\n\n\n2.1.0\n\n\n\n\n\n\ncom.squareup.retrofit2:converter-gson\n\n\n2.1.0\n\n\n\n\n\n\nde.greenrobot:eventbus\n\n\n3.0.0\n\n\n\n\n\n\ncom.google.dagger:dagger\n\n\n2.0\n\n\n\n\n\n\nch.hsr:geohash\n\n\n1.0.13\n\n\n\n\n\n\ncom.google.protobuf\n\n\n2.6.1\n\n\n\n\n\n\n\n\n\n\nTroubleshooting\n\n\nProguard\n\n\nIf you see the message: _Can't find referenced class from the SDK  \n\n\nAdd these lines to your proguard configuration: \n\n\n-dontwarn co.pointwise.proto.JournalProto$.**\n-dontwarn com.google.common.base.Function\n-dontwarn com.google.common.collect.Lists\n\n\n\n\nDowngrading min. skd version to API v7.\n\n\nTechnically SDK minimum version is 7 already.\n\n\nBut it depends on Google Play services with minimum version 9. \n\n\nIf you get an error saying: \n\n\nManifest merger failed : uses-sdk:minSdkVersion 7 cannot be smaller than version 9 declared in library [com.google.android.gms:play-services-location:9.4.0] Suggestion: use tools:overrideLibrary=\ncom.google.android.gms\n to force usage\n\n\n\n\nThan add this line to the manifest of your applicaiton: \n\n\nuses-sdk tools:overrideLibrary=\ncom.google.android.gms, com.google.android.gms.base, com.google.android.gms.tasks, com.google.android.gms.gcm, com.google.android.gms.iid\n/", 
            "title": "Home"
        }, 
        {
            "location": "/#locarta-android-sdk", 
            "text": "Latest Version  Size  Minimal Android API verison  Release Date      143.be90ae4  400 KB  9 (2.3  Gingerbeard)  03/08/2016", 
            "title": "Locarta Android SDK"
        }, 
        {
            "location": "/#setup", 
            "text": "", 
            "title": "Setup"
        }, 
        {
            "location": "/#declare-dependencies", 
            "text": "To add the Locarta Sdk dependency open  build.gradle  file of your project and update the repositories and dependencies blocks as follows:       repositories {\n     // ... other project repositories\n     maven { url  https://repo.pointwise.co/nexus/content/repositories/pointwise  }\n     // Repository will be provided separately \n     }\n     // ...\n     dependencies {\n        // ... other project dependencies\n        compile ( co.locarta.sdk: LocartaSdkVersion :pubProd@aar ) {\n            transitive = true;\n        }\n     }  where \"LocartaSdkVersion\" is actual Locarta SDK version\nSync build.gradle, rebuild your project and import  co.locarta.sdk.LocartaSDK  into your app.", 
            "title": "Declare dependencies"
        }, 
        {
            "location": "/#set-publisher-key", 
            "text": "Add   tag to AndroidManifest.xml of your project       application \n         !-- other content -- \n         meta-data android:name= co.locarta.sdk.pid  android:value= YOUR PUBLISHER KEY /         \n     /application   where PublisherKey is your Publisher Key.", 
            "title": "Set Publisher Key"
        }, 
        {
            "location": "/#initialise-sdk", 
            "text": "You need to initialise Locarta SDK only once on the startup      // Add this line to the header of your file\n    import co.locarta.sdk.LocartaSdk;\n    public class SdkDemoApplication extends Application {\n        @Override\n        public void onCreate() {\n            super.onCreate();\n            // Initialise SDK on App creation\n            LocartaSdk.initialize(getApplicationContext());\n        }\n    }", 
            "title": "Initialise SDK"
        }, 
        {
            "location": "/#user-opt-in", 
            "text": "User has to opt-in into marketing research program for the SDK to start working.  This can be done either via embed dialog:      // Put this code somewhere in the main activities\n    LocartaSdk.showAgreementDialog(this);  Or it can be done via API call if a host application has own accept dialog or compliant terms and conditions:      LocartaSDK.setTermsAccepted(true);  If you want to check the status of accepted terms, call:      // The call returns true or false if user accepted terms or not\n    LocartaSDK.getTermsAccepted();          If you want to stop SDK for whatever reason:     LocartaSdk.stop(context);", 
            "title": "User opt-in"
        }, 
        {
            "location": "/#integration-information", 
            "text": "By default the host app  should not  be setting any additional permissions in it's manifest.  The set of minimal permissions embedded in the Locarta SDK:     Permission Name  Plain English Name in App  Plain German Name in App      android.permission.INTERNET  Full Network Access  Zugriff auf alle Netzwerke    android.permission.ACCESS_COARSE_LOCATION  Approximate Location  Ungef\u00e4hrer Standort    android.permission.ACCESS_FINE_LOCATION  Precise Location  Genauer Standort    android.permission.ACCESS_NETWORK_STATE  View Network Connections  Netzwerkverbindungen abrufen    android.permission.ACCESS_WIFI_STATE  View Wifi Connections  WLAN-Verbindungen abrufen", 
            "title": "Integration information"
        }, 
        {
            "location": "/#proguard", 
            "text": "We already configured proguard rules for the Locarta SDK. No addtional steps has to be done in the host application", 
            "title": "Proguard"
        }, 
        {
            "location": "/#performance-impact", 
            "text": "We expect a battery impact of roughly 2% (adjustable).  Normally we use about 1MB/week of mobile data, but this also depends on how often you connect to wifi.", 
            "title": "Performance impact"
        }, 
        {
            "location": "/#3rd-party-dependencies", 
            "text": "Since we ask you to integrate Locarta SDK as transitive @aar dependeny, we'd like to provide a list of 3rd party dependencies we use.     Dependency  Version      com.google.android.gms:play-services-location  9.4.0    com.google.android.gms:play-services-gcm  9.4.0    com.android.support:appcompat-v7  24.1.1    com.google.code.gson:gson  2.7    com.squareup.retrofit2:retrofit  2.1.0    com.squareup.retrofit2:converter-gson  2.1.0    de.greenrobot:eventbus  3.0.0    com.google.dagger:dagger  2.0    ch.hsr:geohash  1.0.13    com.google.protobuf  2.6.1", 
            "title": "3rd party dependencies"
        }, 
        {
            "location": "/#troubleshooting", 
            "text": "", 
            "title": "Troubleshooting"
        }, 
        {
            "location": "/#proguard_1", 
            "text": "If you see the message: _Can't find referenced class from the SDK    Add these lines to your proguard configuration:   -dontwarn co.pointwise.proto.JournalProto$.**\n-dontwarn com.google.common.base.Function\n-dontwarn com.google.common.collect.Lists", 
            "title": "Proguard"
        }, 
        {
            "location": "/#downgrading-min-skd-version-to-api-v7", 
            "text": "Technically SDK minimum version is 7 already.  But it depends on Google Play services with minimum version 9.   If you get an error saying:   Manifest merger failed : uses-sdk:minSdkVersion 7 cannot be smaller than version 9 declared in library [com.google.android.gms:play-services-location:9.4.0] Suggestion: use tools:overrideLibrary= com.google.android.gms  to force usage  Than add this line to the manifest of your applicaiton:   uses-sdk tools:overrideLibrary= com.google.android.gms, com.google.android.gms.base, com.google.android.gms.tasks, com.google.android.gms.gcm, com.google.android.gms.iid /", 
            "title": "Downgrading min. skd version to API v7."
        }
    ]
}